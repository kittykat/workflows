name: Reusable workflow example

on:
  workflow_call:
    inputs:
      config-path:
        required: true
        type: string
      triage-board:
        required: true
        type: string
        # options: "web", "ios", "android", "meta"
    secrets:
      token:
        required: true

jobs:
  label:
    name: Move needs-info issues
    runs-on: ubuntu-latest
    steps:
        - name: web-config
          if: inputs.triage-board == "web"
          run: |
            echo "PROJECT_ID=PVT_kwHNyc_Ng-o" >> $GITHUB_ENV
            echo "NEEDS_INFO_STATUS_FIELD_ID=PVTSSF_lAHNyc_Ng-rOAAN9pQ" >> $GITHUB_ENV
            echo "STATUS_NEEDSINFO=41b43c06" >> $GITHUB_ENV
            echo "STATUS_DESIGN=47fc9ee4" >> $GITHUB_ENV
            echo "Configured for element-web"
        - name: ios-config
          if: inputs.triage-board == "ios"
          run: |
            echo "PROJECT_ID=PVT_kwHNyc_Ng-o" >> $GITHUB_ENV
            echo "NEEDS_INFO_STATUS_FIELD_ID=PVTSSF_lAHNyc_Ng-rOAAN9pQ" >> $GITHUB_ENV
            echo "STATUS_NEEDSINFO=41b43c06" >> $GITHUB_ENV
            echo "STATUS_DESIGN=47fc9ee4" >> $GITHUB_ENV
            echo "Configured for element-ios"
        - name: android-config
          if: inputs.triage-board == "android"
          run: |
            echo "PROJECT_ID=PVT_kwHNyc_Ng-o" >> $GITHUB_ENV
            echo "NEEDS_INFO_STATUS_FIELD_ID=PVTSSF_lAHNyc_Ng-rOAAN9pQ" >> $GITHUB_ENV
            echo "STATUS_NEEDSINFO=41b43c06" >> $GITHUB_ENV
            echo "STATUS_DESIGN=47fc9ee4" >> $GITHUB_ENV
            echo "Configured for element-android"
        - name: meta-config
          if: inputs.triage-board == "meta"
          run: |
            echo "PROJECT_ID=PVT_kwHNyc_Ng-o" >> $GITHUB_ENV
            echo "NEEDS_INFO_STATUS_FIELD_ID=PVTSSF_lAHNyc_Ng-rOAAN9pQ" >> $GITHUB_ENV
            echo "STATUS_NEEDSINFO=41b43c06" >> $GITHUB_ENV
            echo "STATUS_DESIGN=47fc9ee4" >> $GITHUB_ENV
            echo "Configured for element-meta"
        - name: labelled-design
          if: contains(github.event.issue.labels.*.name, 'x-needs-design') 
          run: |
            echo "STATUS_FIELD_ID=$NEEDS_DESIGN_STATUS_FIELD_ID" >> $GITHUB_ENV
            echo "Labelled needs-design"
        - name: labelled-moreinfo
          if: contains(github.event.issue.labels.*.name, 'x-needs-info') 
          run: |
            echo "STATUS_FIELD_ID=$NEEDS_INFO_STATUS_FIELD_ID" >> $GITHUB_ENV
            echo "Labelled needs-info"
      - name: Add to board
        id: board
        uses: octokit/graphql-action@v2.x
        with:
          headers: '{"GraphQL-Features": "projects_next_graphql"}'
          query: |
            mutation add_to_project($projectid:ID!, $contentid:ID!) {
              addProjectV2ItemById(input: {projectId: $projectid contentId: $contentid}) {
                item {
                  id
                }
              }
            }
          projectid: ${{ env.PROJECT_ID }}
          contentid: ${{ github.event.issue.node_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.token }}

      - name: Move to right column
        uses: octokit/graphql-action@v2.x
        with:
          headers: '{"GraphQL-Features": "projects_next_graphql"}'
          query: |
            mutation ($projectid:ID!, $itemid:ID!, $fieldid:ID!, $optionid:String!) {
              updateProjectV2ItemFieldValue(input: {
                projectId: $projectid
                itemId: $itemid
                fieldId: $fieldid
                value: {
                  singleSelectOptionId: $optionid
                }
              }) {
                projectV2Item {
                  id
                }
              }
            }
          projectid: ${{ env.PROJECT_ID }}
          itemid: ${{ fromJSON(steps.board.outputs.data).addProjectV2ItemById.item.id }}
          fieldid: ${{ env.STATUS_FIELD_ID }}
          optionid: ${{ env.STATUS_IN_PROGRESS }}
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
